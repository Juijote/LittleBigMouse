<UserControl x:Class="LittleBigMouse.Ui.Avalonia.Plugins.Default.DefaultMonitorView"
             xmlns="https://github.com/avaloniaui"
             xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml"
             xmlns:mc="http://schemas.openxmlformats.org/markup-compatibility/2006"
             xmlns:d="http://schemas.microsoft.com/expression/blend/2008"
             xmlns:converters="clr-namespace:HLab.Mvvm.Avalonia.Converters;assembly=HLab.Mvvm.Avalonia"
             xmlns:icons="clr-namespace:HLab.Icons.Avalonia.Icons;assembly=HLab.Icons.Avalonia"
             xmlns:default="clr-namespace:LittleBigMouse.Ui.Avalonia.Plugins.Default"
             xmlns:monitors="clr-namespace:LittleBigMouse.DisplayLayout.Monitors;assembly=LittleBigMouse.DisplayLayout"
             mc:Ignorable="d"
             d:DesignHeight="300" d:DesignWidth="300"
             x:Name="UserControl"
             Foreground="{DynamicResource HLab.Brushes.Foreground}"
			 x:DataType="default:DefaultMonitorViewModel"
             >
	<!--d:DataContext="{d:DesignInstance Type = default1:DefaultMonitorViewModel, IsDesignTimeCreatable = false}"-->
	<Design.DataContext>
		<default:DefaultMonitorViewModel />
	</Design.DataContext>

	<UserControl.Resources>
		<converters:ScaleConverter x:Key="Scale"/>
	</UserControl.Resources>

	<Grid x:Name="Grid" TextElement.FontSize="{Binding Bounds, ElementName=UserControl, Converter={StaticResource Scale}, ConverterParameter=0.05|0.1|20}">

		<Border BorderThickness="0" Background="{DynamicResource HLab.Brushes.Background}" Opacity="0.7"/>

        <!--<Label
            Foreground="White"
            VerticalAlignment="Bottom"
            Opacity="0.3"
            IsVisible="{Binding Model.ActiveSource.Primary, FallbackValue=False}"
            Content="Primary" 
        />-->

		<!-- Central Device No -->
		<Grid HorizontalAlignment="Center" VerticalAlignment="Center">
			<Border x:Name="Center"
                    Width ="{Binding Height, ElementName=Center}"
                    BorderThickness = "{Binding Path=Bounds.Height, ElementName=Center, Converter={StaticResource Scale},ConverterParameter=0.05}"
                    CornerRadius= "{Binding Path=Bounds.Height, ElementName=Center, Converter={StaticResource Scale},ConverterParameter=0.5}"
                    BorderBrush="{DynamicResource HLab.Brushes.Selected.Foreground}"
                    Opacity="0.5"
                    Height="{Binding Bounds, ElementName=Grid, Converter={StaticResource Scale}, ConverterParameter=0.3|1|100}"
                    >

                <Label
                    FontSize="{Binding Path=Bounds.Height, ElementName=Center, Converter={StaticResource Scale},ConverterParameter=0.5}"
                    Margin="0,-7,0,-5"
                    Content ="{Binding Path=Model.ActiveSource.Source.SourceNumber,FallbackValue=X}"
                    HorizontalAlignment="Center"
                    VerticalAlignment="Center"
					HorizontalContentAlignment="Center"
                    VerticalContentAlignment="Center"
                    Foreground="{DynamicResource HLab.Brushes.Foreground}"
                    FontWeight="Bold"
                    />

			</Border>
		</Grid>

        <!-- PNP Code -->
 <!--TODO : VerticalAlignment="{Binding PnpNameVerticalAlignment}"-->
		<StackPanel Margin="5" >
			<Grid>
				<Border>

					<Label Padding="0"
                           Content="{Binding Path=Model.Model.PnpCode, FallbackValue=XXX000}"
                           Foreground="{DynamicResource HLab.Brushes.Foreground}"
                    >
						<Label.Effect>
							<DropShadowEffect OffsetX="0" OffsetY="0" BlurRadius="10" Color="{DynamicResource HLab.Colors.Background}"/>
						</Label.Effect>
					</Label>
				</Border>
			</Grid>
			
			<Grid ColumnDefinitions="2*,*">
				<Border Background="{DynamicResource HLab.Brushes.Background}" Opacity="0.5"/>
				<ListBox
					ItemsSource="{Binding Model.Sources.Items, FallbackValue=Null}"
					SelectedItem="{Binding Model.ActiveSource, FallbackValue=Null}" Background="Transparent">
					<!--<ListBox.Resources>
						<ControlTemplate x:Key="SelectedTemplate" TargetType="ListBoxItem">
							<WrapPanel>
								<Label Foreground="Green" Content="{Binding Path=Model.Source.InterfaceName, FallbackValue=XXX000}"/>
								--><!--<Label Content="{Binding Path=Model.Device.AttachedDevice.DeviceName, FallbackValue=XXX000}"/>--><!--
							</WrapPanel>
						</ControlTemplate>
					</ListBox.Resources>-->
					<ListBox.ItemTemplate>
						<DataTemplate>
								<TextBlock x:DataType ="monitors:PhysicalSource"
									TextWrapping ="WrapWithOverflow"	  
									Text="{Binding Path=Source.SourceName, FallbackValue=XXX000}"
									FontSize="{Binding Bounds, ElementName=Grid, Converter={StaticResource Scale}, ConverterParameter=0.05|0.05|20}"
									/>
								<!--<Label
									Content="{Binding Path=Device.AttachedDevice.DeviceName, FallbackValue=XXX000}"/>-->
						</DataTemplate>
					</ListBox.ItemTemplate>
				</ListBox>
			</Grid>

		</StackPanel>

		<!-- Y Position -->

		<!-- X Position -->

		<!-- Bottom Dimensions -->
		<StackPanel Orientation="Horizontal"
                    HorizontalAlignment="Center"
                    VerticalAlignment="Bottom">
		</StackPanel>

		<Label 
            HorizontalAlignment="Right" 
            FontSize="{Binding Bounds, ElementName=Grid, Converter={StaticResource Scale}, ConverterParameter=0.05|0.1|20}">

			<Grid>
				<Border Background="{DynamicResource HLab.Brushes.Background}" Opacity="0.3">
					<Border.Effect>
						<BlurEffect Radius="20"/>
					</Border.Effect>
				</Border>

				<StackPanel >

					<StackPanel Orientation="Horizontal" HorizontalAlignment="Right" >
						<Label
							Padding="2,0"
							Content="{Binding Path=Model.ActiveSource.RealDpiAvg, StringFormat={}{0:0.}, FallbackValue=N/A}"
							HorizontalAlignment="Right"
							Foreground="{DynamicResource HLab.Brushes.Foreground}"
                        />

						<Label
							Padding="2,0"
							FontWeight="Bold" Foreground="{DynamicResource HLab.Brushes.Foreground}" Opacity="0.5"
							Content="dpi"
                        />

					</StackPanel>

					<Label HorizontalAlignment="Right"
						Padding="0"
						Content="{Binding Path=Inches, FallbackValue=X.0}"
						FontWeight="Bold" Foreground="{DynamicResource HLab.Brushes.Foreground}" Opacity="0.5"
                    />

                    <!-- Resolution -->
					<StackPanel Orientation="Horizontal" HorizontalAlignment="Right">
						<Label
							Padding="2,0"
							FontWeight="Bold" Foreground="{DynamicResource HLab.Brushes.Foreground}" Opacity="0.5"
							Content="{Binding Path=Model.ActiveSource.Source.InPixel.Width,FallbackValue=pix.w}"
                        />

						<Label
							Padding="2,0"
							FontWeight="Bold" Foreground="{DynamicResource HLab.Brushes.Foreground}" Opacity="0.5"
							Content="x"
                        />

						<Label
							Padding="2,0"
							FontWeight="Bold" Foreground="{DynamicResource HLab.Brushes.Foreground}" Opacity="0.5"
							Content="{Binding Path=Model.ActiveSource.Source.InPixel.Height,FallbackValue=pix.h}"
                        />
					</StackPanel>

					<StackPanel Orientation="Horizontal" HorizontalAlignment="Right">

                        <!-- TODO : VerticalAlignment="{Binding Path=DpiVerticalAlignment}"-->
						<Label
                            Padding="2,0"
                            Content="{Binding Path=Model.ActiveSource.Source.DisplayFrequency, StringFormat={}{0:0.}, FallbackValue=xx}"
                            Foreground="{DynamicResource HLab.Brushes.Foreground}"
                            />

						<Label
                            Padding="2,0"
                            Foreground="{DynamicResource HLab.Brushes.Foreground}"
                            Content="Hz"/>
						

					</StackPanel>

				</StackPanel>
			</Grid>
		</Label>
		
		<StackPanel HorizontalAlignment="Right" VerticalAlignment="Bottom" >
			<Grid>
				<Border CornerRadius="50" Background="{DynamicResource HLab.Brushes.Background}" Opacity="0.3">
					<Border.Effect>
						<BlurEffect Radius="20"/>
					</Border.Effect>
				</Border>

				<StackPanel Margin="10">

                    <!-- PNP Device name  -->
                    <Label Margin ="-5" HorizontalAlignment="Right"
                           Content="{Binding Path=Model.Model.PnpDeviceName, FallbackValue=xxx}"
                           Foreground="{DynamicResource HLab.Brushes.Foreground}"/>

                    <!-- Serial Number -->
					<Label Margin="-5" HorizontalAlignment="Right"
					   Content="{Binding Path=Model.SerialNumber, FallbackValue=xxx}"
					   FontWeight="Bold" Foreground="{DynamicResource HLab.Brushes.Foreground}" Opacity="0.5"
					   FontSize ="{Binding Path=Bounds.Height, ElementName=Grid, Converter={StaticResource Scale},ConverterParameter=0.05|0.1|20}"
                    />


                    <!-- Brand Icon -->
					<icons:IconView 
						HorizontalAlignment="Right"
                        Path="{Binding Model.ActiveSource.Source.InterfaceLogo}" 
                        Foreground="{DynamicResource HLab.Brushes.Foreground}"
                        Height="{Binding Path=Bounds, ElementName=Grid, Converter={StaticResource Scale}, ConverterParameter=0.05|0.1|100}"
                        >
						<icons:IconView.Caption>
							<Label VerticalAlignment="Center" Margin="0"
								   Padding="0"
							   Content="{Binding Path=Model.ActiveSource.Source.InterfaceName, FallbackValue=xxx}"
                               FontSize="{Binding Path=Bounds, ElementName=Grid, Converter={StaticResource Scale}, ConverterParameter=0.04|0.1|20}"
                            />
						</icons:IconView.Caption>

					</icons:IconView>
					
				</StackPanel>

			</Grid>

		</StackPanel>

		<StackPanel HorizontalAlignment="Left" VerticalAlignment="Bottom">
			<Button IsVisible="{Binding !Attached}" Command="{Binding AttachCommand}">Attach</Button>
			<Button IsVisible="{Binding DetachVisible}" Command="{Binding DetachCommand}">Detach</Button>
			<Label IsVisible="{Binding Primary}">Primary</Label>
		</StackPanel>

	</Grid>
</UserControl>
